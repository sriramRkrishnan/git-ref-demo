{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../api/Api\";\nimport { apiKey } from \"../api/Apikey\";\nconst initialState = {\n  movies: {},\n  search: 'harry',\n  id: \"\",\n  singleMovie: {}\n};\nexport const fetchAsyncMovies = createAsyncThunk('moviesList/fetchMovies', async val => {\n  const resp = await instance.get(`?apikey=${apiKey}&s=${val}&`);\n  return resp.data;\n});\nexport const fetchAsyncMoviesbyID = createAsyncThunk('moviesList/fetchMoviesID', async val => {\n  const resp = await instance.get(`?apikey=${apiKey}&i=${val}&`);\n  return resp.data;\n});\nexport const movieSlice = createSlice({\n  name: \"moviesList\",\n  initialState,\n  reducers: {\n    searchMovies: (state, action) => {\n      state.search = action.payload;\n    },\n    getId: (state, action) => {\n      state.id = action.payload;\n    },\n    getSingleMovie: (state, action) => {\n      state.singleMovie = action.payload;\n      console.log(state.singleMovie);\n    }\n  },\n  extraReducers: {\n    [fetchAsyncMovies.pending]: () => {\n      console.log('pending');\n    },\n    [fetchAsyncMovies.fulfilled]: (state, action) => {\n      console.log('fullfilled');\n      return {\n        ...state,\n        movies: action.payload\n      };\n    },\n    [fetchAsyncMovies.rejected]: () => {\n      console.log('rejected');\n    },\n    [fetchAsyncMoviesbyID.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        singleMovie: action.payload\n      };\n    }\n  }\n});\nexport const {\n  searchMovies,\n  getId,\n  getSingleMovie\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","instance","apiKey","initialState","movies","search","id","singleMovie","fetchAsyncMovies","val","resp","get","data","fetchAsyncMoviesbyID","movieSlice","name","reducers","searchMovies","state","action","payload","getId","getSingleMovie","console","log","extraReducers","pending","fulfilled","rejected","actions","reducer"],"sources":["/home/sriram/codebase/git/git-ref-demo/src/features/movieSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../api/Api\";\nimport { apiKey } from \"../api/Apikey\";\n\nconst initialState = {\n    movies : {},\n    search : 'harry',\n    id : \"\",\n    singleMovie : {}\n}\n\nexport const fetchAsyncMovies = createAsyncThunk('moviesList/fetchMovies' , async(val) => {\n    const resp = await instance.get(`?apikey=${apiKey}&s=${val}&`);\n    return resp.data\n})\n\nexport const fetchAsyncMoviesbyID = createAsyncThunk('moviesList/fetchMoviesID' , async(val) => {\n    const resp = await instance.get(`?apikey=${apiKey}&i=${val}&`);\n    return resp.data\n})\n\n\nexport const movieSlice = createSlice({\n\n    name:\"moviesList\",\n    initialState,\n    reducers : {\n        searchMovies : (state,action) =>{\n            state.search = action.payload\n        },\n        getId : (state,action) =>{\n            state.id = action.payload\n        },\n        getSingleMovie : (state,action) =>{\n            state.singleMovie = action.payload\n            console.log(state.singleMovie);\n        }\n    },\n    extraReducers : {\n        [fetchAsyncMovies.pending] : ()=>{\n            console.log('pending');\n        },\n        [fetchAsyncMovies.fulfilled] : (state,action) =>{\n            console.log('fullfilled');\n            return {...state, movies : action.payload}\n        },\n        [fetchAsyncMovies.rejected] : () =>{\n            console.log('rejected');\n        },\n        [fetchAsyncMoviesbyID.fulfilled] : (state,action) =>{\n            return {...state , singleMovie : action.payload}\n        }\n   \n    }\n})\n\n\nexport const { searchMovies,getId,getSingleMovie } = movieSlice.actions\n\nexport default movieSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAACC,gBAAgB,QAAQ,kBAAkB;AAC/D,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,MAAM,QAAQ,eAAe;AAEtC,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAG,CAAC,CAAC;EACXC,MAAM,EAAG,OAAO;EAChBC,EAAE,EAAG,EAAE;EACPC,WAAW,EAAG,CAAC;AACnB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGR,gBAAgB,CAAC,wBAAwB,EAAG,MAAMS,GAAG,IAAK;EACtF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,GAAG,CAAE,WAAUT,MAAO,MAAKO,GAAI,GAAE,CAAC;EAC9D,OAAOC,IAAI,CAACE,IAAI;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,oBAAoB,GAAGb,gBAAgB,CAAC,0BAA0B,EAAG,MAAMS,GAAG,IAAK;EAC5F,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,GAAG,CAAE,WAAUT,MAAO,MAAKO,GAAI,GAAE,CAAC;EAC9D,OAAOC,IAAI,CAACE,IAAI;AACpB,CAAC,CAAC;AAGF,OAAO,MAAME,UAAU,GAAGf,WAAW,CAAC;EAElCgB,IAAI,EAAC,YAAY;EACjBZ,YAAY;EACZa,QAAQ,EAAG;IACPC,YAAY,EAAG,CAACC,KAAK,EAACC,MAAM,KAAI;MAC5BD,KAAK,CAACb,MAAM,GAAGc,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,KAAK,EAAG,CAACH,KAAK,EAACC,MAAM,KAAI;MACrBD,KAAK,CAACZ,EAAE,GAAGa,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDE,cAAc,EAAG,CAACJ,KAAK,EAACC,MAAM,KAAI;MAC9BD,KAAK,CAACX,WAAW,GAAGY,MAAM,CAACC,OAAO;MAClCG,OAAO,CAACC,GAAG,CAACN,KAAK,CAACX,WAAW,CAAC;IAClC;EACJ,CAAC;EACDkB,aAAa,EAAG;IACZ,CAACjB,gBAAgB,CAACkB,OAAO,GAAI,MAAI;MAC7BH,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,CAAChB,gBAAgB,CAACmB,SAAS,GAAI,CAACT,KAAK,EAACC,MAAM,KAAI;MAC5CI,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,OAAO;QAAC,GAAGN,KAAK;QAAEd,MAAM,EAAGe,MAAM,CAACC;MAAO,CAAC;IAC9C,CAAC;IACD,CAACZ,gBAAgB,CAACoB,QAAQ,GAAI,MAAK;MAC/BL,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IAC3B,CAAC;IACD,CAACX,oBAAoB,CAACc,SAAS,GAAI,CAACT,KAAK,EAACC,MAAM,KAAI;MAChD,OAAO;QAAC,GAAGD,KAAK;QAAGX,WAAW,EAAGY,MAAM,CAACC;MAAO,CAAC;IACpD;EAEJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEH,YAAY;EAACI,KAAK;EAACC;AAAe,CAAC,GAAGR,UAAU,CAACe,OAAO;AAEvE,eAAef,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}