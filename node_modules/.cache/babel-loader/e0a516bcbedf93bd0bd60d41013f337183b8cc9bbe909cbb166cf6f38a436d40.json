{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../api/Api\";\nimport { apiKey } from \"../api/Apikey\";\nconst initialState = {\n  movies: {},\n  search: ''\n};\nexport const fetchAsyncMovies = createAsyncThunk('moviesList/fetchMovies', async () => {\n  const resp = await instance.get(`?apikey=${apiKey}&s=${initialState.search}&`);\n  return resp.data;\n});\nexport const movieSlice = createSlice({\n  name: \"moviesList\",\n  initialState,\n  reducers: {\n    searchMovies: (state, action) => {\n      state.search = action.payload;\n      console.log(state.search);\n    }\n  },\n  extraReducers: {\n    [fetchAsyncMovies.pending]: () => {\n      console.log('pending');\n    },\n    [fetchAsyncMovies.fulfilled]: (state, action) => {\n      console.log('fullfilled');\n      return {\n        ...state,\n        movies: action.payload\n      };\n    },\n    [fetchAsyncMovies.rejected]: () => {\n      console.log('rejected');\n    }\n  }\n});\nexport const {\n  searchMovies\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","instance","apiKey","initialState","movies","search","fetchAsyncMovies","resp","get","data","movieSlice","name","reducers","searchMovies","state","action","payload","console","log","extraReducers","pending","fulfilled","rejected","actions","reducer"],"sources":["/home/sriram/codebase/redux-toolkit-ref/src/features/movieSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../api/Api\";\nimport { apiKey } from \"../api/Apikey\";\n\nconst initialState = {\n    movies : {},\n    search : ''\n}\n\nexport const fetchAsyncMovies = createAsyncThunk('moviesList/fetchMovies' , async() => {\n    const resp = await instance.get(`?apikey=${apiKey}&s=${initialState.search}&`);\n    return resp.data\n})\n\n\n\nexport const movieSlice = createSlice({\n\n    name:\"moviesList\",\n    initialState,\n    reducers : {\n        searchMovies : (state,action) =>{\n            state.search = action.payload\n            console.log(state.search);\n        }\n    },\n    extraReducers : {\n        [fetchAsyncMovies.pending] : ()=>{\n            console.log('pending');\n        },\n        [fetchAsyncMovies.fulfilled] : (state,action) =>{\n            console.log('fullfilled');\n            return {...state, movies : action.payload}\n        },\n        [fetchAsyncMovies.rejected] : () =>{\n            console.log('rejected');\n        }\n    }\n\n})\n\nexport const { searchMovies } = movieSlice.actions\n\nexport default movieSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAACC,gBAAgB,QAAQ,kBAAkB;AAC/D,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,MAAM,QAAQ,eAAe;AAEtC,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAG,CAAC,CAAC;EACXC,MAAM,EAAG;AACb,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGN,gBAAgB,CAAC,wBAAwB,EAAG,YAAW;EACnF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,GAAG,CAAE,WAAUN,MAAO,MAAKC,YAAY,CAACE,MAAO,GAAE,CAAC;EAC9E,OAAOE,IAAI,CAACE,IAAI;AACpB,CAAC,CAAC;AAIF,OAAO,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAElCY,IAAI,EAAC,YAAY;EACjBR,YAAY;EACZS,QAAQ,EAAG;IACPC,YAAY,EAAG,CAACC,KAAK,EAACC,MAAM,KAAI;MAC5BD,KAAK,CAACT,MAAM,GAAGU,MAAM,CAACC,OAAO;MAC7BC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACT,MAAM,CAAC;IAC7B;EACJ,CAAC;EACDc,aAAa,EAAG;IACZ,CAACb,gBAAgB,CAACc,OAAO,GAAI,MAAI;MAC7BH,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC;IACD,CAACZ,gBAAgB,CAACe,SAAS,GAAI,CAACP,KAAK,EAACC,MAAM,KAAI;MAC5CE,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,OAAO;QAAC,GAAGJ,KAAK;QAAEV,MAAM,EAAGW,MAAM,CAACC;MAAO,CAAC;IAC9C,CAAC;IACD,CAACV,gBAAgB,CAACgB,QAAQ,GAAI,MAAK;MAC/BL,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IAC3B;EACJ;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL;AAAa,CAAC,GAAGH,UAAU,CAACa,OAAO;AAElD,eAAeb,UAAU,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}